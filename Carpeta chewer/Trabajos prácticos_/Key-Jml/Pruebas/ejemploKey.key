/* Let us assume that we want to prove the following theorem:
Any binary relation which is both transitive and irreflexive is also antisymmetric.

Formalising this in predicate logic using a binary predicate p yields :
∀x.∀y.∀z.(p(x, y) ∧ p(y, z) → p(x, z))
∧ ∀x.¬p(x, x)
→ ∀x.∀y.(p(x, y) → ¬p(y, x))  */

//SOLUCION

/*  1. The sort declarations. List all sorts to be used here, separated by semicola.
	2. The predicate symbol declarations. List all predicates here, separated by semicola. Since we are in
	a sorted enviroment, the arguments are sorted as well.
	3. The function symbol declarations.List all functions here, separated by semicola. Since we are in
	a sorted enviroment, the arguments and the return value are typed as well.
	4. The problem statement. State the problem in Java DL which you wish to prove universally valid. */


\sorts {
	S;
}

\predicates {
	p(S,S);
}

\functions {
	S f(S); // This function is not needed but included for demonstration purposes
}

\problem {
	(
		\forall S x; (\forall S y; (\forall S z; ((p(x,y) & p(y,z)) -> p(x,z))))
		& \forall S x; ! p(x,x)
	)
	-> \forall S x; (\forall S y; (p(x,y) -> ! p(y,x)))
}
